<div class="py-5">
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-5">
    <% if (products && products.length > 0) { %> <% products?.map((product) => {
    %>
    <div
      class="max-w-sm bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 flex flex-col justify-between"
    >
      <a
        class="h-full flex justify-center items-center"
        href="/product/<%= product.id %>"
      >
        <img
          class="rounded-t-lg object-contain max-w-[220px]"
          src="<%= product.image %>"
          alt="<%= product.name %>"
        />
      </a>
      <div class="p-5 h-fit flex justify-between items-start flex-col gap-4">
        <div class="info">
          <a href="/product/<%= product.id %>">
            <h5
              class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white"
            >
              <%= product.name %>
            </h5>
          </a>
          <p
            class="mb-3 font-normal text-gray-700 dark:text-gray-400 line-clamp-2"
          >
            <%= product.description %>
          </p>
          <p class="text-[#1d4ed8] text-xl">Price : <%= product.price %> $</p>
        </div>

        <div class="w-full">
          <form id="cartForm" class="cartForm flex flex-col gap-2 w-full">
            <div>
              <label for="cart-input" class="sr-only"
                >Choose cart number:</label
              >
              <div class="relative flex items-center mb-2 w-full">
                <button
                  type="button"
                  class="decrement-button bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 dark:border-gray-600 hover:bg-gray-200 border border-gray-300 rounded-s-lg p-3 h-11 focus:ring-gray-100 dark:focus:ring-gray-700 focus:ring-2 focus:outline-none"
                >
                  <svg
                    class="w-3 h-3 text-gray-900 dark:text-white"
                    aria-hidden="true"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 18 2"
                  >
                    <path
                      stroke="currentColor"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M1 1h16"
                    />
                  </svg>
                </button>

                <input
                  type="number"
                  name="quantity"
                  class="cart-input bg-gray-50 border-x-0 border-gray-300 h-11 font-medium text-center text-gray-900 text-sm focus:ring-blue-500 focus:border-blue-500 block w-full pb-6 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                  value="1"
                  min="1"
                  id="quantity"
                  required
                />

                <button
                  type="button"
                  class="increment-button bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 dark:border-gray-600 hover:bg-gray-200 border border-gray-300 rounded-e-lg p-3 h-11 focus:ring-gray-100 dark:focus:ring-gray-700 focus:ring-2 focus:outline-none"
                >
                  <svg
                    class="w-3 h-3 text-gray-900 dark:text-white"
                    aria-hidden="true"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 18 18"
                  >
                    <path
                      stroke="currentColor"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M9 1v16M1 9h16"
                    />
                  </svg>
                </button>
              </div>
            </div>

            <!-- الحقول المخفية لإرسال البيانات الإضافية -->
            <input
              id="productId"
              type="hidden"
              name="productId"
              value="<%= product.id %>"
            />
            <input
              id="price"
              type="hidden"
              name="price"
              value="<%= product.price %>"
            />
            <input
              id="name"
              type="hidden"
              name="name"
              value="<%= product.name %>"
            />

            <button
              type="submit"
              class="flex items-center justify-center p-3 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800 w-full"
            >
              Add To Cart
            </button>
          </form>
        </div>
      </div>
    </div>

    <% }); %> <% } else { %>
    <div
      class="p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400"
      role="alert"
    >
      <span class="font-medium">Danger alert!</span> No products found.
    </div>
    <% } %>
  </div>
</div>

<script>
  const decrementButtons = document.querySelectorAll(".decrement-button");
  const incrementButtons = document.querySelectorAll(".increment-button");
  const cartInputs = document.querySelectorAll(".cart-input");

  // Decrement button functionality
  decrementButtons.forEach((button, index) => {
    button.addEventListener("click", () => {
      let currentValue = parseInt(cartInputs[index].value);
      if (currentValue > 1) {
        cartInputs[index].value = currentValue - 1;
      }
    });
  });

  // Increment button functionality
  incrementButtons.forEach((button, index) => {
    button.addEventListener("click", () => {
      let currentValue = parseInt(cartInputs[index].value);
      if (currentValue < 5) {
        cartInputs[index].value = currentValue + 1;
      }
    });
  });

  // Handle all forms with class "cartForm"
  const cartForms = document.querySelectorAll(".cartForm");

  cartForms.forEach((form, index) => {
    form.addEventListener("submit", async (e) => {
      e.preventDefault(); // Prevent the default form submission

      const formData = new FormData(e.target);

      console.log("formData:", formData);

      try {
        const response = await fetch("/cart", {
          method: "POST",
          body: formData,
        });
        console.log("response:", response);

        if (response.ok) {
          const data = await response.json();
          console.log("User data:", data);
          cartInputs[index].value = 1;
          alert(data.message);
        } else {
          const error = await response.json();
          alert(`Error: ${error.message}`);
        }
      } catch (error) {
        console.error("Error:", error);
        alert("An error occurred. Please try again.");
      }
    });
  });
</script>
